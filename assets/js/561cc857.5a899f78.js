"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[855],{3985:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>x,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"reference/api/utilities","title":"Utility Functions","description":"Helper functions and data manipulation tools","source":"@site/docs/reference/api/utilities.mdx","sourceDirName":"reference/api","slug":"/reference/api/utilities","permalink":"/attack-data-model/docs/reference/api/utilities","draft":false,"unlisted":false,"editUrl":"https://github.com/mitre-attack/attack-data-model/tree/main/docusaurus/docs/reference/api/utilities.mdx","tags":[],"version":"current","lastUpdatedBy":"Sean Sica","lastUpdatedAt":1757710335000,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"AttackDataModel","permalink":"/attack-data-model/docs/reference/api/attack-data-model"},"next":{"title":"Schema Reference","permalink":"/attack-data-model/docs/reference/schemas/"}}');var r=t(4848),s=t(8453),c=t(1367);const a={},l="Utility Functions",o={},d=[{value:"Data Source Utilities",id:"data-source-utilities",level:2},{value:"isDataSourceCached()",id:"isdatasourcecached",level:3},{value:"clearDataSourceCache()",id:"cleardatasourcecache",level:3},{value:"clearAllDataSourceCaches()",id:"clearalldatasourcecaches",level:3},{value:"Object Identification Utilities",id:"object-identification-utilities",level:2},{value:"isValidStixId()",id:"isvalidstixid",level:3},{value:"isValidAttackId()",id:"isvalidattackid",level:3},{value:"extractAttackId()",id:"extractattackid",level:3},{value:"extractStixType()",id:"extractstixtype",level:3},{value:"Data Analysis Utilities",id:"data-analysis-utilities",level:2},{value:"getObjectCounts()",id:"getobjectcounts",level:3},{value:"findBrokenRelationships()",id:"findbrokenrelationships",level:3},{value:"getRelationshipCounts()",id:"getrelationshipcounts",level:3},{value:"Filtering and Search Utilities",id:"filtering-and-search-utilities",level:2},{value:"filterByPlatform()",id:"filterbyplatform",level:3},{value:"filterByTactic()",id:"filterbytactic",level:3},{value:"searchByName()",id:"searchbyname",level:3},{value:"Validation Utilities",id:"validation-utilities",level:2},{value:"validateBundle()",id:"validatebundle",level:3},{value:"validateRelationshipIntegrity()",id:"validaterelationshipintegrity",level:3},{value:"Export Utilities",id:"export-utilities",level:2},{value:"exportToJson()",id:"exporttojson",level:3},{value:"exportToCsv()",id:"exporttocsv",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"utility-functions",children:"Utility Functions"})}),"\n",(0,r.jsx)(c.A,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Helper functions and data manipulation tools"})}),"\n",(0,r.jsx)(n.p,{children:"The ATT&CK Data Model provides various utility functions for common data manipulation, validation, and analysis tasks. These functions complement the main classes and provide convenient ways to work with ATT&CK data."}),"\n",(0,r.jsx)(n.h2,{id:"data-source-utilities",children:"Data Source Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"isdatasourcecached",children:"isDataSourceCached()"}),"\n",(0,r.jsx)(n.p,{children:"Check if a data source is currently cached in memory."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function isDataSourceCached(uuid: string): boolean\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"uuid"})," - Data source UUID from registration"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if cached, ",(0,r.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { isDataSourceCached } from '@mitre-attack/attack-data-model';\r\n\r\nif (isDataSourceCached(uuid)) {\r\n    console.log('Data source is cached - loading will be fast');\r\n} else {\r\n    console.log('Data source will be loaded from storage');\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cleardatasourcecache",children:"clearDataSourceCache()"}),"\n",(0,r.jsx)(n.p,{children:"Remove a specific data source from the cache."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function clearDataSourceCache(uuid: string): boolean\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"uuid"})," - Data source UUID to remove from cache"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if cache was cleared, ",(0,r.jsx)(n.code,{children:"false"})," if UUID not found"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { clearDataSourceCache } from '@mitre-attack/attack-data-model';\r\n\r\nconst cleared = clearDataSourceCache(uuid);\r\nif (cleared) {\r\n    console.log('Cache cleared - next load will refresh data');\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clearalldatasourcecaches",children:"clearAllDataSourceCaches()"}),"\n",(0,r.jsx)(n.p,{children:"Remove all data sources from the cache."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function clearAllDataSourceCaches(): number\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Number of data sources that were cached"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { clearAllDataSourceCaches } from '@mitre-attack/attack-data-model';\r\n\r\nconst clearedCount = clearAllDataSourceCaches();\r\nconsole.log(`Cleared ${clearedCount} cached data sources`);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"object-identification-utilities",children:"Object Identification Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"isvalidstixid",children:"isValidStixId()"}),"\n",(0,r.jsx)(n.p,{children:"Validate STIX ID format compliance."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function isValidStixId(id: string): boolean\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"})," - String to validate as STIX ID"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if valid STIX ID format, ",(0,r.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Valid STIX ID Format"}),": ",(0,r.jsx)(n.code,{children:"{type}--{UUID}"})," where UUID is version 4"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { isValidStixId } from '@mitre-attack/attack-data-model';\r\n\r\nconsole.log(isValidStixId('attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298')); // true\r\nconsole.log(isValidStixId('invalid-id')); // false\r\nconsole.log(isValidStixId('attack-pattern--not-a-uuid')); // false\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isvalidattackid",children:"isValidAttackId()"}),"\n",(0,r.jsx)(n.p,{children:"Validate ATT&CK ID format for specific object types."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function isValidAttackId(id: string, objectType?: string): boolean\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"})," - String to validate as ATT&CK ID"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objectType"})," - Optional STIX object type for specific validation"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"true"})," if valid ATT&CK ID format, ",(0,r.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Supported Formats by Object Type"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Object Type"}),(0,r.jsx)(n.th,{children:"ATT&CK ID Format"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"attack-pattern"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"T\\d{4}(\\.\\d{3})?"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"T1055"}),", ",(0,r.jsx)(n.code,{children:"T1055.001"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"x-mitre-tactic"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"TA\\d{4}"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"TA0001"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"intrusion-set"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"G\\d{4}"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"G0006"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"malware"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"S\\d{4}"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"S0001"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tool"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"S\\d{4}"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"S0002"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"campaign"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"C\\d{4}"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"C0001"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"course-of-action"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"M\\d{4}"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"M1001"})})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { isValidAttackId } from '@mitre-attack/attack-data-model';\r\n\r\n// Generic validation\r\nconsole.log(isValidAttackId('T1055')); // true\r\nconsole.log(isValidAttackId('G0006')); // true\r\nconsole.log(isValidAttackId('invalid')); // false\r\n\r\n// Type-specific validation\r\nconsole.log(isValidAttackId('T1055.001', 'attack-pattern')); // true\r\nconsole.log(isValidAttackId('G0006', 'attack-pattern')); // false\r\nconsole.log(isValidAttackId('TA0001', 'x-mitre-tactic')); // true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"extractattackid",children:"extractAttackId()"}),"\n",(0,r.jsx)(n.p,{children:"Extract ATT&CK ID from an object's external references."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function extractAttackId(obj: AttackObject): string | null\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"obj"})," - ATT&CK object with external references"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ATT&CK ID if found, ",(0,r.jsx)(n.code,{children:"null"})," otherwise"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { extractAttackId } from '@mitre-attack/attack-data-model';\r\n\r\nconst technique = attackDataModel.techniques[0];\r\nconst attackId = extractAttackId(technique);\r\nconsole.log(`Technique ID: ${attackId}`); // \"T1055\"\n"})}),"\n",(0,r.jsx)(n.h3,{id:"extractstixtype",children:"extractStixType()"}),"\n",(0,r.jsx)(n.p,{children:"Extract the STIX object type from a STIX ID."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function extractStixType(stixId: string): string | null\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"stixId"})," - Valid STIX ID"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Object type if valid, ",(0,r.jsx)(n.code,{children:"null"})," otherwise"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { extractStixType } from '@mitre-attack/attack-data-model';\r\n\r\nconst type = extractStixType('attack-pattern--12345678-1234-1234-1234-123456789012');\r\nconsole.log(type); // \"attack-pattern\"\r\n\r\nconst invalidType = extractStixType('invalid-id');\r\nconsole.log(invalidType); // null\n"})}),"\n",(0,r.jsx)(n.h2,{id:"data-analysis-utilities",children:"Data Analysis Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"getobjectcounts",children:"getObjectCounts()"}),"\n",(0,r.jsx)(n.p,{children:"Get counts of all object types in a data model."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function getObjectCounts(dataModel: AttackDataModel): Record<string, number>\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dataModel"})," - AttackDataModel instance"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Object with counts by STIX object type"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { getObjectCounts } from \'@mitre-attack/attack-data-model\';\r\n\r\nconst counts = getObjectCounts(attackDataModel);\r\nconsole.log(counts);\r\n// {\r\n//   "attack-pattern": 196,\r\n//   "x-mitre-tactic": 14,\r\n//   "intrusion-set": 142,\r\n//   "malware": 89,\r\n//   "tool": 76,\r\n//   "relationship": 2341\r\n// }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"findbrokenrelationships",children:"findBrokenRelationships()"}),"\n",(0,r.jsx)(n.p,{children:"Identify relationships that reference non-existent objects."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function findBrokenRelationships(dataModel: AttackDataModel): BrokenRelationship[]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Array of broken relationship information"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"BrokenRelationship Interface"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface BrokenRelationship {\r\n    relationshipId: string;\r\n    relationshipType: string;\r\n    sourceId: string;\r\n    targetId: string;\r\n    missingReference: 'source' | 'target';\r\n    description?: string;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { findBrokenRelationships } from '@mitre-attack/attack-data-model';\r\n\r\nconst broken = findBrokenRelationships(attackDataModel);\r\nif (broken.length > 0) {\r\n    console.log(`Found ${broken.length} broken relationships:`);\r\n    broken.forEach(rel => {\r\n        console.log(`- ${rel.relationshipType} missing ${rel.missingReference}`);\r\n    });\r\n} else {\r\n    console.log('All relationships are valid');\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getrelationshipcounts",children:"getRelationshipCounts()"}),"\n",(0,r.jsx)(n.p,{children:"Count relationships by type."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function getRelationshipCounts(dataModel: AttackDataModel): Record<string, number>\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dataModel"})," - AttackDataModel instance"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Object with counts by relationship type"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { getRelationshipCounts } from \'@mitre-attack/attack-data-model\';\r\n\r\nconst relCounts = getRelationshipCounts(attackDataModel);\r\nconsole.log(relCounts);\r\n// {\r\n//   "uses": 1824,\r\n//   "mitigates": 389,\r\n//   "subtechnique-of": 198,\r\n//   "attributed-to": 67,\r\n//   "detects": 156\r\n// }\n'})}),"\n",(0,r.jsx)(n.h2,{id:"filtering-and-search-utilities",children:"Filtering and Search Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"filterbyplatform",children:"filterByPlatform()"}),"\n",(0,r.jsx)(n.p,{children:"Filter techniques by platform."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function filterByPlatform(\r\n    techniques: TechniqueImpl[],\r\n    platform: string | string[]\r\n): TechniqueImpl[]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"techniques"})," - Array of techniques to filter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"platform"})," - Platform name(s) to match"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Filtered array of techniques"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { filterByPlatform } from '@mitre-attack/attack-data-model';\r\n\r\nconst windowsTechniques = filterByPlatform(\r\n    attackDataModel.techniques,\r\n    'Windows'\r\n);\r\n\r\nconst multiPlatform = filterByPlatform(\r\n    attackDataModel.techniques,\r\n    ['Windows', 'Linux']\r\n);\r\n\r\nconsole.log(`Windows techniques: ${windowsTechniques.length}`);\r\nconsole.log(`Multi-platform techniques: ${multiPlatform.length}`);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"filterbytactic",children:"filterByTactic()"}),"\n",(0,r.jsx)(n.p,{children:"Filter techniques by associated tactic."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function filterByTactic(\r\n    techniques: TechniqueImpl[],\r\n    tacticShortname: string | string[]\r\n): TechniqueImpl[]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"techniques"})," - Array of techniques to filter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tacticShortname"})," - Tactic shortname(s) to match"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Filtered array of techniques"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { filterByTactic } from '@mitre-attack/attack-data-model';\r\n\r\nconst credAccessTechniques = filterByTactic(\r\n    attackDataModel.techniques,\r\n    'credential-access'\r\n);\r\n\r\nconst multiTactic = filterByTactic(\r\n    attackDataModel.techniques,\r\n    ['initial-access', 'execution']\r\n);\r\n\r\nconsole.log(`Credential Access techniques: ${credAccessTechniques.length}`);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"searchbyname",children:"searchByName()"}),"\n",(0,r.jsx)(n.p,{children:"Search objects by name with fuzzy matching."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function searchByName<T extends { name: string }>(\r\n    objects: T[],\r\n    searchTerm: string,\r\n    options?: SearchOptions\r\n): T[]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SearchOptions Interface"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface SearchOptions {\r\n    caseSensitive?: boolean;\r\n    fuzzyMatch?: boolean;\r\n    maxResults?: number;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objects"})," - Array of objects to search"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"searchTerm"})," - Text to search for"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options"})," - Search configuration"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Array of matching objects"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { searchByName } from '@mitre-attack/attack-data-model';\r\n\r\n// Case-insensitive exact match\r\nconst credentialTechniques = searchByName(\r\n    attackDataModel.techniques,\r\n    'credential',\r\n    { caseSensitive: false, maxResults: 10 }\r\n);\r\n\r\n// Fuzzy matching\r\nconst processMatches = searchByName(\r\n    attackDataModel.techniques,\r\n    'proces',\r\n    { fuzzyMatch: true, maxResults: 5 }\r\n);\r\n\r\nconsole.log(`Found ${credentialTechniques.length} credential techniques`);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"validation-utilities",children:"Validation Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"validatebundle",children:"validateBundle()"}),"\n",(0,r.jsx)(n.p,{children:"Validate a STIX bundle structure."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function validateBundle(bundle: unknown): ValidationResult\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ValidationResult Interface"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ValidationResult {\r\n    isValid: boolean;\r\n    errors: ValidationError[];\r\n    warnings: string[];\r\n    objectCounts: Record<string, number>;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bundle"})," - Bundle data to validate"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Validation result with details"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { validateBundle } from '@mitre-attack/attack-data-model';\r\nimport fs from 'fs';\r\n\r\nconst bundleData = JSON.parse(fs.readFileSync('bundle.json', 'utf8'));\r\nconst result = validateBundle(bundleData);\r\n\r\nif (result.isValid) {\r\n    console.log('\u2705 Bundle is valid');\r\n    console.log('Object counts:', result.objectCounts);\r\n} else {\r\n    console.log('\u274c Bundle validation failed');\r\n    result.errors.forEach(error => {\r\n        console.log(`- ${error.message}`);\r\n    });\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"validaterelationshipintegrity",children:"validateRelationshipIntegrity()"}),"\n",(0,r.jsx)(n.p,{children:"Check that all relationships reference valid objects."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function validateRelationshipIntegrity(dataModel: AttackDataModel): IntegrityResult\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"IntegrityResult Interface"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface IntegrityResult {\r\n    isValid: boolean;\r\n    brokenRelationships: BrokenRelationship[];\r\n    orphanedObjects: string[];\r\n    totalRelationships: number;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { validateRelationshipIntegrity } from '@mitre-attack/attack-data-model';\r\n\r\nconst integrity = validateRelationshipIntegrity(attackDataModel);\r\n\r\nconsole.log(`Total relationships: ${integrity.totalRelationships}`);\r\nconsole.log(`Broken relationships: ${integrity.brokenRelationships.length}`);\r\nconsole.log(`Orphaned objects: ${integrity.orphanedObjects.length}`);\r\n\r\nif (integrity.isValid) {\r\n    console.log('\u2705 All relationships are valid');\r\n} else {\r\n    console.log('\u274c Found integrity issues');\r\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"export-utilities",children:"Export Utilities"}),"\n",(0,r.jsx)(n.h3,{id:"exporttojson",children:"exportToJson()"}),"\n",(0,r.jsx)(n.p,{children:"Export data model to JSON format."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function exportToJson(\r\n    dataModel: AttackDataModel,\r\n    options?: ExportOptions\r\n): string\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ExportOptions Interface"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ExportOptions {\r\n    pretty?: boolean;\r\n    includeRelationships?: boolean;\r\n    objectTypes?: string[];\r\n    minify?: boolean;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { exportToJson } from '@mitre-attack/attack-data-model';\r\n\r\n// Pretty-printed with all data\r\nconst fullExport = exportToJson(attackDataModel, {\r\n    pretty: true,\r\n    includeRelationships: true\r\n});\r\n\r\n// Minified with only techniques\r\nconst techniquesOnly = exportToJson(attackDataModel, {\r\n    minify: true,\r\n    objectTypes: ['attack-pattern']\r\n});\r\n\r\nfs.writeFileSync('full-export.json', fullExport);\r\nfs.writeFileSync('techniques.json', techniquesOnly);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exporttocsv",children:"exportToCsv()"}),"\n",(0,r.jsx)(n.p,{children:"Export specific object collections to CSV format."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function exportToCsv(\r\n    objects: AttackObject[],\r\n    fields?: string[]\r\n): string\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objects"})," - Array of objects to export"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fields"})," - Specific fields to include (optional)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": CSV-formatted string"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { exportToCsv } from '@mitre-attack/attack-data-model';\r\n\r\n// Export all technique fields\r\nconst techniquesCsv = exportToCsv(attackDataModel.techniques);\r\n\r\n// Export specific fields only\r\nconst basicTechniquesCsv = exportToCsv(\r\n    attackDataModel.techniques,\r\n    ['name', 'external_references', 'x_mitre_platforms']\r\n);\r\n\r\nfs.writeFileSync('techniques.csv', techniquesCsv);\r\nfs.writeFileSync('techniques-basic.csv', basicTechniquesCsv);\n"})}),"\n",(0,r.jsx)(n.hr,{})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7293:(e,n,t)=>{t.d(n,{A:()=>M});var i=t(6540),r=t(4848);function s(e){const{mdxAdmonitionTitle:n,rest:t}=function(e){const n=i.Children.toArray(e),t=n.find((e=>i.isValidElement(e)&&"mdxAdmonitionTitle"===e.type)),s=n.filter((e=>e!==t)),c=t?.props.children;return{mdxAdmonitionTitle:c,rest:s.length>0?(0,r.jsx)(r.Fragment,{children:s}):null}}(e.children),s=e.title??n;return{...e,...s&&{title:s},children:t}}var c=t(4164),a=t(1312),l=t(7559);const o="admonition_xJq3",d="admonitionHeading_Gvgb",h="admonitionIcon_Rf37",x="admonitionContent_BuS1";function u({type:e,className:n,children:t}){return(0,r.jsx)("div",{className:(0,c.A)(l.G.common.admonition,l.G.common.admonitionType(e),o,n),children:t})}function p({icon:e,title:n}){return(0,r.jsxs)("div",{className:d,children:[(0,r.jsx)("span",{className:h,children:e}),n]})}function j({children:e}){return e?(0,r.jsx)("div",{className:x,children:e}):null}function m(e){const{type:n,icon:t,title:i,children:s,className:c}=e;return(0,r.jsxs)(u,{type:n,className:c,children:[i||t?(0,r.jsx)(p,{title:i,icon:t}):null,(0,r.jsx)(j,{children:s})]})}function g(e){return(0,r.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const f={icon:(0,r.jsx)(g,{}),title:(0,r.jsx)(a.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function y(e){return(0,r.jsx)(m,{...f,...e,className:(0,c.A)("alert alert--secondary",e.className),children:e.children})}function v(e){return(0,r.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const k={icon:(0,r.jsx)(v,{}),title:(0,r.jsx)(a.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function b(e){return(0,r.jsx)(m,{...k,...e,className:(0,c.A)("alert alert--success",e.className),children:e.children})}function T(e){return(0,r.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const I={icon:(0,r.jsx)(T,{}),title:(0,r.jsx)(a.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function A(e){return(0,r.jsx)(m,{...I,...e,className:(0,c.A)("alert alert--info",e.className),children:e.children})}function C(e){return(0,r.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const S={icon:(0,r.jsx)(C,{}),title:(0,r.jsx)(a.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function N(e){return(0,r.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const D={icon:(0,r.jsx)(N,{}),title:(0,r.jsx)(a.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const R={icon:(0,r.jsx)(C,{}),title:(0,r.jsx)(a.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const w={...{note:y,tip:b,info:A,warning:function(e){return(0,r.jsx)(m,{...S,...e,className:(0,c.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,r.jsx)(m,{...D,...e,className:(0,c.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,r.jsx)(y,{title:"secondary",...e}),important:e=>(0,r.jsx)(A,{title:"important",...e}),success:e=>(0,r.jsx)(b,{title:"success",...e}),caution:function(e){return(0,r.jsx)(m,{...R,...e,className:(0,c.A)("alert alert--warning",e.className),children:e.children})}}};function M(e){const n=s(e),t=(i=n.type,w[i]||(console.warn(`No admonition component found for admonition type "${i}". Using Info as fallback.`),w.info));var i;return(0,r.jsx)(t,{...n})}},1367:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var i=t(7293),r=t(4848);function s(){return(0,r.jsx)(i.A,{type:"warning",title:"\ud83d\udea7 Work in Progress",icon:"\u26a0\ufe0f",children:"This document is a work in progress. Content may change, and some sections may be incomplete."})}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);