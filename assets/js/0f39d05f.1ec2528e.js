"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4088],{3551:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"principles/trade-offs","title":"Architecture and Design Trade-offs","description":"Understanding the key decisions and compromises in the ATT&CK Data Model","source":"@site/docs/principles/trade-offs.mdx","sourceDirName":"principles","slug":"/principles/trade-offs","permalink":"/attack-data-model/docs/principles/trade-offs","draft":false,"unlisted":false,"editUrl":"https://github.com/mitre-attack/attack-data-model/tree/main/docusaurus/docs/principles/trade-offs.mdx","tags":[],"version":"current","lastUpdatedBy":"Sean Sica","lastUpdatedAt":1757710335000,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Compatibility","permalink":"/attack-data-model/docs/principles/compatibility"},"next":{"title":"Contributing","permalink":"/attack-data-model/docs/contributing/"}}');var r=i(4848),t=i(8453),a=i(1367);const o={},l="Architecture and Design Trade-offs",d={},c=[{value:"Performance vs. Flexibility",id:"performance-vs-flexibility",level:2},{value:"Choice: Type-Safe Schemas with Runtime Validation",id:"choice-type-safe-schemas-with-runtime-validation",level:3},{value:"Alternative Approaches Considered",id:"alternative-approaches-considered",level:3},{value:"Memory Usage vs. Query Performance",id:"memory-usage-vs-query-performance",level:2},{value:"Choice: Relationship Pre-computation and Caching",id:"choice-relationship-pre-computation-and-caching",level:3},{value:"Alternative Approaches Considered",id:"alternative-approaches-considered-1",level:3},{value:"Standards Compliance vs. Extensibility",id:"standards-compliance-vs-extensibility",level:2},{value:"Choice: STIX 2.1 Foundation with ATT&amp;CK Extensions",id:"choice-stix-21-foundation-with-attck-extensions",level:3},{value:"Alternative Approaches Considered",id:"alternative-approaches-considered-2",level:3},{value:"Synchronous vs. Asynchronous API Design",id:"synchronous-vs-asynchronous-api-design",level:2},{value:"Choice: Synchronous Primary API with Async Registration",id:"choice-synchronous-primary-api-with-async-registration",level:3},{value:"Multi-Domain vs. Single-Domain Optimization",id:"multi-domain-vs-single-domain-optimization",level:2},{value:"Choice: Unified API Supporting Enterprise, Mobile, and ICS",id:"choice-unified-api-supporting-enterprise-mobile-and-ics",level:3},{value:"Error Handling Philosophy",id:"error-handling-philosophy",level:2},{value:"Choice: Strict Validation with Relaxed Mode Option",id:"choice-strict-validation-with-relaxed-mode-option",level:3},{value:"Development and Maintenance Implications",id:"development-and-maintenance-implications",level:2},{value:"Backward Compatibility vs. Evolution",id:"backward-compatibility-vs-evolution",level:3},{value:"Guidance for Different Use Cases",id:"guidance-for-different-use-cases",level:2},{value:"High-Performance Scenarios",id:"high-performance-scenarios",level:3},{value:"Memory-Constrained Environments",id:"memory-constrained-environments",level:3},{value:"Standards-Compliant Integrations",id:"standards-compliant-integrations",level:3},{value:"Rapid Development and Prototyping",id:"rapid-development-and-prototyping",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"architecture-and-design-trade-offs",children:"Architecture and Design Trade-offs"})}),"\n",(0,r.jsx)(a.A,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Understanding the key decisions and compromises in the ATT&CK Data Model"})}),"\n",(0,r.jsx)(n.p,{children:"Software architecture involves countless trade-offs where optimizing for one goal requires sacrificing another.\r\nThe ATT&CK Data Model makes deliberate architectural choices that prioritize certain benefits while accepting specific costs.\r\nUnderstanding these trade-offs helps users make informed decisions about when and how to use the library, and explains why certain features work the way they do."}),"\n",(0,r.jsx)(n.h2,{id:"performance-vs-flexibility",children:"Performance vs. Flexibility"}),"\n",(0,r.jsx)(n.h3,{id:"choice-type-safe-schemas-with-runtime-validation",children:"Choice: Type-Safe Schemas with Runtime Validation"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compile-time error detection prevents many bugs before deployment"}),"\n",(0,r.jsx)(n.li,{children:"IDE support with auto-completion and inline documentation"}),"\n",(0,r.jsx)(n.li,{children:"Runtime validation ensures data quality and standards compliance"}),"\n",(0,r.jsx)(n.li,{children:"Clear error messages help developers debug invalid data quickly"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Costs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Schema validation adds processing overhead during data loading"}),"\n",(0,r.jsx)(n.li,{children:"Zod schemas increase bundle size compared to simple type annotations"}),"\n",(0,r.jsx)(n.li,{children:"Complex nested validation can be slower than basic JSON parsing"}),"\n",(0,r.jsx)(n.li,{children:"Memory usage is higher due to maintaining both raw and validated data"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Helps:"})," Applications requiring high data quality, strong type safety, or integration with TypeScript tooling."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Hurts:"})," High-performance scenarios processing massive datasets where validation overhead is significant."]}),"\n",(0,r.jsx)(n.h3,{id:"alternative-approaches-considered",children:"Alternative Approaches Considered"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"JSON Schema + Type Generation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Would reduce runtime overhead but lose type-level validation"}),"\n",(0,r.jsx)(n.li,{children:"Harder to maintain consistency between schemas and TypeScript types"}),"\n",(0,r.jsx)(n.li,{children:"Less developer-friendly error messages"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Plain TypeScript Types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimal runtime overhead but no data validation"}),"\n",(0,r.jsx)(n.li,{children:"Risk of runtime errors from invalid data"}),"\n",(0,r.jsx)(n.li,{children:"Difficult to ensure STIX 2.1 compliance"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"memory-usage-vs-query-performance",children:"Memory Usage vs. Query Performance"}),"\n",(0,r.jsx)(n.h3,{id:"choice-relationship-pre-computation-and-caching",children:"Choice: Relationship Pre-computation and Caching"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fast relationship traversal without expensive join operations"}),"\n",(0,r.jsxs)(n.li,{children:["Intuitive API methods like ",(0,r.jsx)(n.code,{children:"technique.getTactics()"})," and ",(0,r.jsx)(n.code,{children:"group.getCampaigns()"})]}),"\n",(0,r.jsx)(n.li,{children:"Consistent performance regardless of dataset size"}),"\n",(0,r.jsx)(n.li,{children:"Enables complex relationship queries without graph database overhead"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Costs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Higher memory usage due to storing relationship indexes"}),"\n",(0,r.jsx)(n.li,{children:"Longer initial loading time as relationships are computed"}),"\n",(0,r.jsx)(n.li,{children:"Memory usage grows quadratically with highly connected datasets"}),"\n",(0,r.jsx)(n.li,{children:"Relationship updates require index rebuilding"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Helps:"})," Interactive applications requiring fast relationship navigation, dashboards, or analysis tools."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Hurts:"})," Memory-constrained environments, serverless functions with size limits, or applications only needing simple object access."]}),"\n",(0,r.jsx)(n.h3,{id:"alternative-approaches-considered-1",children:"Alternative Approaches Considered"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"On-Demand Relationship Resolution:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lower memory usage but much slower relationship queries"}),"\n",(0,r.jsx)(n.li,{children:"Would require complex caching to maintain reasonable performance"}),"\n",(0,r.jsx)(n.li,{children:"API inconsistency where some operations are fast and others slow"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"External Graph Database:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Better performance for complex queries but significant infrastructure overhead"}),"\n",(0,r.jsx)(n.li,{children:"Would require additional deployment complexity"}),"\n",(0,r.jsx)(n.li,{children:"Loss of type safety in graph traversal operations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"standards-compliance-vs-extensibility",children:"Standards Compliance vs. Extensibility"}),"\n",(0,r.jsx)(n.h3,{id:"choice-stix-21-foundation-with-attck-extensions",children:"Choice: STIX 2.1 Foundation with ATT&CK Extensions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Full compatibility with existing STIX 2.1 tooling and datasets"}),"\n",(0,r.jsx)(n.li,{children:"Standards-compliant approach enables ecosystem interoperability"}),"\n",(0,r.jsx)(n.li,{children:"ATT&CK-specific validations ensure domain model accuracy"}),"\n",(0,r.jsx)(n.li,{children:"Clear extension points for custom fields and validation rules"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Costs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"STIX complexity adds learning curve for ATT&CK-only users"}),"\n",(0,r.jsx)(n.li,{children:"Standards compliance limits certain API design choices"}),"\n",(0,r.jsx)(n.li,{children:"Verbose object structures due to STIX requirements"}),"\n",(0,r.jsx)(n.li,{children:"Extension points require careful design to maintain compliance"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Helps:"})," Organizations with existing STIX infrastructure, tools requiring interoperability, or complex threat intelligence workflows."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Hurts:"})," Simple applications only needing basic ATT&CK data access, or scenarios where STIX overhead isn't justified."]}),"\n",(0,r.jsx)(n.h3,{id:"alternative-approaches-considered-2",children:"Alternative Approaches Considered"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ATT&CK-Native Data Model:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simpler API and smaller learning curve"}),"\n",(0,r.jsx)(n.li,{children:"Better performance due to optimized data structures"}),"\n",(0,r.jsx)(n.li,{children:"Loss of standards compliance and interoperability"}),"\n",(0,r.jsx)(n.li,{children:"Custom tooling required for data exchange"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Generic JSON Objects:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maximum flexibility and minimal constraints"}),"\n",(0,r.jsx)(n.li,{children:"Loss of type safety, validation, and relationship navigation"}),"\n",(0,r.jsx)(n.li,{children:"Increased development burden on applications"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"synchronous-vs-asynchronous-api-design",children:"Synchronous vs. Asynchronous API Design"}),"\n",(0,r.jsx)(n.h3,{id:"choice-synchronous-primary-api-with-async-registration",children:"Choice: Synchronous Primary API with Async Registration"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple, intuitive API for data access operations"}),"\n",(0,r.jsxs)(n.li,{children:["No async complexity for common use cases like ",(0,r.jsx)(n.code,{children:"model.techniques"})]}),"\n",(0,r.jsx)(n.li,{children:"Predictable performance characteristics for queries"}),"\n",(0,r.jsx)(n.li,{children:"Easy integration with existing synchronous code"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Costs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initial data registration must be async (network/file operations)"}),"\n",(0,r.jsx)(n.li,{children:"Cannot easily support streaming or progressive data loading"}),"\n",(0,r.jsx)(n.li,{children:"Memory must hold entire dataset during synchronous operations"}),"\n",(0,r.jsx)(n.li,{children:"Less suitable for reactive or event-driven architectures"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Helps:"})," Traditional application architectures, data analysis scripts, or scenarios requiring predictable synchronous data access."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Hurts:"})," Event-driven systems, applications requiring progressive data loading, or memory-constrained streaming scenarios."]}),"\n",(0,r.jsx)(n.h2,{id:"multi-domain-vs-single-domain-optimization",children:"Multi-Domain vs. Single-Domain Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"choice-unified-api-supporting-enterprise-mobile-and-ics",children:"Choice: Unified API Supporting Enterprise, Mobile, and ICS"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single library handles all ATT&CK domains uniformly"}),"\n",(0,r.jsx)(n.li,{children:"Consistent API across different domain types"}),"\n",(0,r.jsx)(n.li,{children:"Easy cross-domain analysis and comparison"}),"\n",(0,r.jsx)(n.li,{children:"Simplified dependency management for multi-domain applications"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Costs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Larger bundle size even for single-domain usage"}),"\n",(0,r.jsx)(n.li,{children:"Schema complexity must handle domain-specific variations"}),"\n",(0,r.jsx)(n.li,{children:"Memory overhead for unused domain capabilities"}),"\n",(0,r.jsx)(n.li,{children:"Potential performance impact from domain abstraction layer"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Helps:"})," Comprehensive threat analysis, research across multiple domains, or organizations using multiple ATT&CK domains."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Hurts:"})," Specialized applications focused on single domain, mobile applications with size constraints, or embedded systems."]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling-philosophy",children:"Error Handling Philosophy"}),"\n",(0,r.jsx)(n.h3,{id:"choice-strict-validation-with-relaxed-mode-option",children:"Choice: Strict Validation with Relaxed Mode Option"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default strict mode ensures data quality and early error detection"}),"\n",(0,r.jsx)(n.li,{children:"Relaxed mode provides fallback for handling imperfect real-world data"}),"\n",(0,r.jsx)(n.li,{children:"Clear error messages help developers identify and fix data issues"}),"\n",(0,r.jsx)(n.li,{children:"Configurable behavior allows different use case optimization"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Costs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Strict mode may reject usable data due to minor validation issues"}),"\n",(0,r.jsx)(n.li,{children:"Error handling complexity increases application development burden"}),"\n",(0,r.jsx)(n.li,{children:"Relaxed mode can lead to subtle bugs from incomplete data processing"}),"\n",(0,r.jsx)(n.li,{children:"Debugging can be difficult when validation rules are complex"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Helps:"})," Production applications requiring data quality assurance, development environments where early error detection is valuable."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When This Hurts:"})," Research scenarios with experimental data, rapid prototyping, or integration with legacy systems producing imperfect data."]}),"\n",(0,r.jsx)(n.h2,{id:"development-and-maintenance-implications",children:"Development and Maintenance Implications"}),"\n",(0,r.jsx)(n.h3,{id:"backward-compatibility-vs-evolution",children:"Backward Compatibility vs. Evolution"}),"\n",(0,r.jsx)(n.p,{children:"We decided to make use of Semantic Versioning with Major Version Breaking Changes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Benefits:"})," Clear compatibility promises and smooth upgrade paths for minor/patch versions."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Costs:"})," Major version upgrades can require significant application changes, slowing adoption of new features."]}),"\n",(0,r.jsx)(n.h2,{id:"guidance-for-different-use-cases",children:"Guidance for Different Use Cases"}),"\n",(0,r.jsx)(n.h3,{id:"high-performance-scenarios",children:"High-Performance Scenarios"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Consider simpler data access patterns to minimize validation overhead"}),"\n",(0,r.jsx)(n.li,{children:"Use relaxed parsing mode if data quality requirements permit"}),"\n",(0,r.jsx)(n.li,{children:"Profile memory usage and consider single-domain usage if appropriate"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"memory-constrained-environments",children:"Memory-Constrained Environments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Evaluate whether relationship pre-computation benefits justify memory costs"}),"\n",(0,r.jsx)(n.li,{children:"Consider processing data in smaller batches if possible"}),"\n",(0,r.jsx)(n.li,{children:"Monitor memory usage patterns and optimize based on actual usage"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"standards-compliant-integrations",children:"Standards-Compliant Integrations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Leverage STIX 2.1 compliance for interoperability benefits"}),"\n",(0,r.jsx)(n.li,{children:"Use extension points carefully to maintain standards compliance"}),"\n",(0,r.jsx)(n.li,{children:"Design custom validations to complement rather than replace STIX requirements"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rapid-development-and-prototyping",children:"Rapid Development and Prototyping"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use relaxed parsing mode to handle imperfect data gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Focus on synchronous API patterns for simpler control flow"}),"\n",(0,r.jsx)(n.li,{children:"Consider single-domain optimization if working with specific domains"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Understanding these trade-offs helps you make informed decisions about whether the ATT&CK Data Model's approach aligns with your specific requirements and constraints."}),"\n",(0,r.jsx)(n.hr,{})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7293:(e,n,i)=>{i.d(n,{A:()=>q});var s=i(6540),r=i(4848);function t(e){const{mdxAdmonitionTitle:n,rest:i}=function(e){const n=s.Children.toArray(e),i=n.find((e=>s.isValidElement(e)&&"mdxAdmonitionTitle"===e.type)),t=n.filter((e=>e!==i)),a=i?.props.children;return{mdxAdmonitionTitle:a,rest:t.length>0?(0,r.jsx)(r.Fragment,{children:t}):null}}(e.children),t=e.title??n;return{...e,...t&&{title:t},children:i}}var a=i(4164),o=i(1312),l=i(7559);const d="admonition_xJq3",c="admonitionHeading_Gvgb",h="admonitionIcon_Rf37",p="admonitionContent_BuS1";function u({type:e,className:n,children:i}){return(0,r.jsx)("div",{className:(0,a.A)(l.G.common.admonition,l.G.common.admonitionType(e),d,n),children:i})}function m({icon:e,title:n}){return(0,r.jsxs)("div",{className:c,children:[(0,r.jsx)("span",{className:h,children:e}),n]})}function x({children:e}){return e?(0,r.jsx)("div",{className:p,children:e}):null}function j(e){const{type:n,icon:i,title:s,children:t,className:a}=e;return(0,r.jsxs)(u,{type:n,className:a,children:[s||i?(0,r.jsx)(m,{title:s,icon:i}):null,(0,r.jsx)(x,{children:t})]})}function g(e){return(0,r.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const f={icon:(0,r.jsx)(g,{}),title:(0,r.jsx)(o.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function v(e){return(0,r.jsx)(j,{...f,...e,className:(0,a.A)("alert alert--secondary",e.className),children:e.children})}function y(e){return(0,r.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const b={icon:(0,r.jsx)(y,{}),title:(0,r.jsx)(o.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function C(e){return(0,r.jsx)(j,{...b,...e,className:(0,a.A)("alert alert--success",e.className),children:e.children})}function w(e){return(0,r.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const T={icon:(0,r.jsx)(w,{}),title:(0,r.jsx)(o.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function A(e){return(0,r.jsx)(j,{...T,...e,className:(0,a.A)("alert alert--info",e.className),children:e.children})}function S(e){return(0,r.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const M={icon:(0,r.jsx)(S,{}),title:(0,r.jsx)(o.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function k(e){return(0,r.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const I={icon:(0,r.jsx)(k,{}),title:(0,r.jsx)(o.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const P={icon:(0,r.jsx)(S,{}),title:(0,r.jsx)(o.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const z={...{note:v,tip:C,info:A,warning:function(e){return(0,r.jsx)(j,{...M,...e,className:(0,a.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,r.jsx)(j,{...I,...e,className:(0,a.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,r.jsx)(v,{title:"secondary",...e}),important:e=>(0,r.jsx)(A,{title:"important",...e}),success:e=>(0,r.jsx)(C,{title:"success",...e}),caution:function(e){return(0,r.jsx)(j,{...P,...e,className:(0,a.A)("alert alert--warning",e.className),children:e.children})}}};function q(e){const n=t(e),i=(s=n.type,z[s]||(console.warn(`No admonition component found for admonition type "${s}". Using Info as fallback.`),z.info));var s;return(0,r.jsx)(i,{...n})}},1367:(e,n,i)=>{i.d(n,{A:()=>t});i(6540);var s=i(7293),r=i(4848);function t(){return(0,r.jsx)(s.A,{type:"warning",title:"\ud83d\udea7 Work in Progress",icon:"\u26a0\ufe0f",children:"This document is a work in progress. Content may change, and some sections may be incomplete."})}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);