"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5592],{2261:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"how-to-guides/manage-data-sources","title":"How to Manage Data Sources","description":"Switch between different ATT&CK data sources efficiently","source":"@site/docs/how-to-guides/manage-data-sources.mdx","sourceDirName":"how-to-guides","slug":"/how-to-guides/manage-data-sources","permalink":"/attack-data-model/docs/how-to-guides/manage-data-sources","draft":false,"unlisted":false,"editUrl":"https://github.com/mitre-attack/attack-data-model/tree/main/docusaurus/docs/how-to-guides/manage-data-sources.mdx","tags":[],"version":"current","lastUpdatedBy":"Jared Ondricek","lastUpdatedAt":1758571766000,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"How-to Guides","permalink":"/attack-data-model/docs/how-to-guides/"},"next":{"title":"How to Validate Custom STIX Bundles","permalink":"/attack-data-model/docs/how-to-guides/validate-bundles"}}');var t=r(4848),o=r(8453),s=r(1367);const i={},c="How to Manage Data Sources",l={},d=[{value:"Problem Scenarios",id:"problem-scenarios",level:2},{value:"Switch Between ATT&amp;CK Versions",id:"switch-between-attck-versions",level:2},{value:"Compare Multiple Versions",id:"compare-multiple-versions",level:3},{value:"Use Latest Version",id:"use-latest-version",level:3},{value:"Load from Local Files",id:"load-from-local-files",level:2},{value:"Prepare Local STIX Bundle",id:"prepare-local-stix-bundle",level:3},{value:"Load from Local File",id:"load-from-local-file",level:3},{value:"Load from Custom URLs",id:"load-from-custom-urls",level:2},{value:"Load from URL Source",id:"load-from-url-source",level:3},{value:"Load with Custom Headers",id:"load-with-custom-headers",level:3},{value:"Manage Multiple Data Sources",id:"manage-multiple-data-sources",level:2},{value:"Data Source Registry Pattern",id:"data-source-registry-pattern",level:3},{value:"Handle Data Source Errors",id:"handle-data-source-errors",level:2},{value:"Graceful Fallback Pattern",id:"graceful-fallback-pattern",level:3},{value:"Validate Data Source Before Use",id:"validate-data-source-before-use",level:3},{value:"Cache and Performance",id:"cache-and-performance",level:2},{value:"Implement Simple Caching",id:"implement-simple-caching",level:3},{value:"Production Configuration",id:"production-configuration",level:2},{value:"Environment-Based Data Sources",id:"environment-based-data-sources",level:3},{value:"Monitoring and Logging",id:"monitoring-and-logging",level:2},{value:"Add Data Source Monitoring",id:"add-data-source-monitoring",level:3},{value:"Key Takeaways",id:"key-takeaways",level:2},{value:"Related Guides",id:"related-guides",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"how-to-manage-data-sources",children:"How to Manage Data Sources"})}),"\n",(0,t.jsx)(s.A,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Switch between different ATT&CK data sources efficiently"})}),"\n",(0,t.jsx)(n.p,{children:"This guide shows you how to manage multiple ATT&CK data sources, switch between different versions, and work with local files, URLs, and the official repository."}),"\n",(0,t.jsx)(n.h2,{id:"problem-scenarios",children:"Problem Scenarios"}),"\n",(0,t.jsx)(n.p,{children:"Use this guide when you need to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Switch between different ATT&CK versions for compatibility testing"}),"\n",(0,t.jsx)(n.li,{children:"Load ATT&CK data from local files instead of the internet"}),"\n",(0,t.jsx)(n.li,{children:"Fetch data from custom URLs or mirrors"}),"\n",(0,t.jsx)(n.li,{children:"Manage multiple data sources in a production application"}),"\n",(0,t.jsx)(n.li,{children:"Cache and reuse data sources efficiently"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"switch-between-attck-versions",children:"Switch Between ATT&CK Versions"}),"\n",(0,t.jsx)(n.h3,{id:"compare-multiple-versions",children:"Compare Multiple Versions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { registerDataSource, loadDataModel, DataSource } from '@mitre-attack/attack-data-model';\r\n\r\nasync function compareVersions() {\r\n    const versions = ['15.0', '15.1'];\r\n    const models: { [version: string]: any } = {};\r\n\r\n    // Load multiple versions\r\n    for (const version of versions) {\r\n        const dataSource = new DataSource({\r\n            source: 'attack',\r\n            domain: 'enterprise-attack',\r\n            version: version,\r\n            parsingMode: 'relaxed'\r\n        });\r\n\r\n        const uuid = await registerDataSource(dataSource);\r\n        models[version] = loadDataModel(uuid);\r\n    }\r\n\r\n    // Compare technique counts\r\n    versions.forEach(version => {\r\n        const count = models[version].techniques.length;\r\n        console.log(`ATT&CK ${version}: ${count} techniques`);\r\n    });\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"use-latest-version",children:"Use Latest Version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Omit version to get the latest available\r\nconst latestDataSource = new DataSource({\r\n    source: 'attack',\r\n    domain: 'enterprise-attack',\r\n    // No version specified = latest\r\n    parsingMode: 'relaxed'\r\n});\r\n\r\nconst uuid = await registerDataSource(latestDataSource);\r\nconst latestModel = loadDataModel(uuid);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"load-from-local-files",children:"Load from Local Files"}),"\n",(0,t.jsx)(n.h3,{id:"prepare-local-stix-bundle",children:"Prepare Local STIX Bundle"}),"\n",(0,t.jsx)(n.p,{children:"First, save a STIX bundle JSON file locally:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Download ATT&CK data\r\ncurl -o enterprise-attack.json https://raw.githubusercontent.com/mitre-attack/attack-stix-data/master/enterprise-attack/enterprise-attack.json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"load-from-local-file",children:"Load from Local File"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { DataSource } from '@mitre-attack/attack-data-model';\r\nimport path from 'path';\r\n\r\nasync function loadLocalData() {\r\n    const filePath = path.resolve('./enterprise-attack.json');\r\n\r\n    const localDataSource = new DataSource({\r\n        source: 'file',\r\n        filePath: filePath,\r\n        parsingMode: 'relaxed'\r\n    });\r\n\r\n    try {\r\n        const uuid = await registerDataSource(localDataSource);\r\n        const model = loadDataModel(uuid);\r\n\r\n        console.log(`Loaded ${model.techniques.length} techniques from local file`);\r\n        return model;\r\n\r\n    } catch (error) {\r\n        console.error('Failed to load local file:', error);\r\n        throw error;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"load-from-custom-urls",children:"Load from Custom URLs"}),"\n",(0,t.jsx)(n.h3,{id:"load-from-url-source",children:"Load from URL Source"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function loadFromUrl() {\r\n    const customUrl = 'https://your-custom-server.com/attack-data.json';\r\n\r\n    const urlDataSource = new DataSource({\r\n        source: 'url',\r\n        url: customUrl,\r\n        parsingMode: 'relaxed'\r\n    });\r\n\r\n    const uuid = await registerDataSource(urlDataSource);\r\n    const model = loadDataModel(uuid);\r\n\r\n    return model;\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"load-with-custom-headers",children:"Load with Custom Headers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function loadWithAuth() {\r\n    const dataSource = new DataSource({\r\n        source: 'url',\r\n        url: 'https://private-server.com/attack-data.json',\r\n        requestOptions: {\r\n            headers: {\r\n                'Authorization': 'Bearer YOUR_TOKEN',\r\n                'X-Custom-Header': 'value'\r\n            }\r\n        },\r\n        parsingMode: 'strict'\r\n    });\r\n\r\n    const uuid = await registerDataSource(dataSource);\r\n    return loadDataModel(uuid);\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"manage-multiple-data-sources",children:"Manage Multiple Data Sources"}),"\n",(0,t.jsx)(n.h3,{id:"data-source-registry-pattern",children:"Data Source Registry Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class AttackDataManager {\r\n    private dataSources: Map<string, string> = new Map();\r\n\r\n    async registerSource(name: string, config: any): Promise<string> {\r\n        const dataSource = new DataSource(config);\r\n        const uuid = await registerDataSource(dataSource);\r\n        this.dataSources.set(name, uuid);\r\n        return uuid;\r\n    }\r\n\r\n    getModel(name: string) {\r\n        const uuid = this.dataSources.get(name);\r\n        if (!uuid) {\r\n            throw new Error(`Data source '${name}' not registered`);\r\n        }\r\n        return loadDataModel(uuid);\r\n    }\r\n\r\n    async setupCommonSources() {\r\n        // Enterprise latest\r\n        await this.registerSource('enterprise-latest', {\r\n            source: 'attack',\r\n            domain: 'enterprise-attack',\r\n            parsingMode: 'relaxed'\r\n        });\r\n\r\n        // Enterprise v15.0\r\n        await this.registerSource('enterprise-v15', {\r\n            source: 'attack',\r\n            domain: 'enterprise-attack',\r\n            version: '15.0',\r\n            parsingMode: 'relaxed'\r\n        });\r\n\r\n        // Mobile latest\r\n        await this.registerSource('mobile-latest', {\r\n            source: 'attack',\r\n            domain: 'mobile-attack',\r\n            parsingMode: 'relaxed'\r\n        });\r\n    }\r\n}\r\n\r\n// Usage\r\nconst manager = new AttackDataManager();\r\nawait manager.setupCommonSources();\r\n\r\nconst enterpriseModel = manager.getModel('enterprise-latest');\r\nconst mobileModel = manager.getModel('mobile-latest');\n"})}),"\n",(0,t.jsx)(n.h2,{id:"handle-data-source-errors",children:"Handle Data Source Errors"}),"\n",(0,t.jsx)(n.h3,{id:"graceful-fallback-pattern",children:"Graceful Fallback Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function loadWithFallback() {\r\n    const fallbackSources = [\r\n        // Try latest first\r\n        {\r\n            source: 'attack',\r\n            domain: 'enterprise-attack',\r\n            parsingMode: 'relaxed'\r\n        },\r\n        // Fallback to specific version\r\n        {\r\n            source: 'attack',\r\n            domain: 'enterprise-attack',\r\n            version: '15.1',\r\n            parsingMode: 'relaxed'\r\n        },\r\n        // Final fallback to local file\r\n        {\r\n            source: 'file',\r\n            filePath: './backup-enterprise-attack.json',\r\n            parsingMode: 'relaxed'\r\n        }\r\n    ];\r\n\r\n    for (const config of fallbackSources) {\r\n        try {\r\n            const dataSource = new DataSource(config);\r\n            const uuid = await registerDataSource(dataSource);\r\n            const model = loadDataModel(uuid);\r\n\r\n            console.log(`Successfully loaded from source: ${config.source}`);\r\n            return model;\r\n\r\n        } catch (error) {\r\n            console.warn(`Failed to load from ${config.source}:`, error.message);\r\n            continue;\r\n        }\r\n    }\r\n\r\n    throw new Error('All data sources failed');\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"validate-data-source-before-use",children:"Validate Data Source Before Use"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function validateDataSource(config: any): Promise<boolean> {\r\n    try {\r\n        const dataSource = new DataSource(config);\r\n        const uuid = await registerDataSource(dataSource);\r\n        const model = loadDataModel(uuid);\r\n\r\n        // Basic validation checks\r\n        const hasMinimumTechniques = model.techniques.length > 100;\r\n        const hasBasicTactics = model.tactics.length > 5;\r\n        const hasGroups = model.groups.length > 0;\r\n\r\n        if (hasMinimumTechniques && hasBasicTactics && hasGroups) {\r\n            console.log('\u2705 Data source validation passed');\r\n            return true;\r\n        } else {\r\n            console.warn('\u26a0\ufe0f  Data source seems incomplete');\r\n            return false;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('\u274c Data source validation failed:', error);\r\n        return false;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"cache-and-performance",children:"Cache and Performance"}),"\n",(0,t.jsx)(n.h3,{id:"implement-simple-caching",children:"Implement Simple Caching"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class CachedDataManager {\r\n    private cache: Map<string, any> = new Map();\r\n\r\n    private getCacheKey(config: any): string {\r\n        return JSON.stringify(config);\r\n    }\r\n\r\n    async loadData(config: any) {\r\n        const cacheKey = this.getCacheKey(config);\r\n\r\n        // Check cache first\r\n        if (this.cache.has(cacheKey)) {\r\n            console.log('\ud83d\udccb Loading from cache');\r\n            return this.cache.get(cacheKey);\r\n        }\r\n\r\n        // Load fresh data\r\n        console.log('\ud83c\udf10 Loading fresh data');\r\n        const dataSource = new DataSource(config);\r\n        const uuid = await registerDataSource(dataSource);\r\n        const model = loadDataModel(uuid);\r\n\r\n        // Cache the result\r\n        this.cache.set(cacheKey, model);\r\n\r\n        return model;\r\n    }\r\n\r\n    clearCache() {\r\n        this.cache.clear();\r\n        console.log('\ud83d\uddd1\ufe0f  Cache cleared');\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"production-configuration",children:"Production Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"environment-based-data-sources",children:"Environment-Based Data Sources"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function getDataSourceConfig(): any {\r\n    const environment = process.env.NODE_ENV || 'development';\r\n\r\n    switch (environment) {\r\n        case 'production':\r\n            return {\r\n                source: 'attack',\r\n                domain: 'enterprise-attack',\r\n                version: '15.1', // Pin version in production\r\n                parsingMode: 'strict' // Strict validation in production\r\n            };\r\n\r\n        case 'staging':\r\n            return {\r\n                source: 'url',\r\n                url: process.env.STAGING_ATTACK_URL,\r\n                parsingMode: 'relaxed'\r\n            };\r\n\r\n        case 'development':\r\n        default:\r\n            return {\r\n                source: 'file',\r\n                filePath: './dev-data/enterprise-attack.json',\r\n                parsingMode: 'relaxed'\r\n            };\r\n    }\r\n}\r\n\r\n// Usage\r\nconst config = getDataSourceConfig();\r\nconst dataSource = new DataSource(config);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"monitoring-and-logging",children:"Monitoring and Logging"}),"\n",(0,t.jsx)(n.h3,{id:"add-data-source-monitoring",children:"Add Data Source Monitoring"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function loadWithMonitoring(config: any) {\r\n    const startTime = Date.now();\r\n\r\n    try {\r\n        console.log('\ud83d\udce1 Starting data source load:', config.source);\r\n\r\n        const dataSource = new DataSource(config);\r\n        const uuid = await registerDataSource(dataSource);\r\n        const model = loadDataModel(uuid);\r\n\r\n        const loadTime = Date.now() - startTime;\r\n        console.log(`\u2705 Load completed in ${loadTime}ms`);\r\n        console.log(`\ud83d\udcca Loaded: ${model.techniques.length} techniques, ${model.groups.length} groups`);\r\n\r\n        return model;\r\n\r\n    } catch (error) {\r\n        const loadTime = Date.now() - startTime;\r\n        console.error(`\u274c Load failed after ${loadTime}ms:`, error.message);\r\n        throw error;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Management"}),": Pin specific versions in production, use latest for development"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fallback Strategy"}),": Always have backup data sources for reliability"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validation"}),": Verify data quality after loading, especially with custom sources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching"}),": Implement caching for frequently accessed data to improve performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"}),": Log data source performance and success rates for troubleshooting"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Configuration"}),": Use different data sources for different deployment environments"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-guides",children:"Related Guides"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./error-handling",children:"Handle Parsing Errors Gracefully"})," - Manage data quality issues"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./extend-schemas",children:"Extend Schemas with Custom Fields"})," - Customize data structures"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./performance",children:"Performance Optimization"})," - Scale for large datasets"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},7293:(e,n,r)=>{r.d(n,{A:()=>P});var a=r(6540),t=r(4848);function o(e){const{mdxAdmonitionTitle:n,rest:r}=function(e){const n=a.Children.toArray(e),r=n.find((e=>a.isValidElement(e)&&"mdxAdmonitionTitle"===e.type)),o=n.filter((e=>e!==r)),s=r?.props.children;return{mdxAdmonitionTitle:s,rest:o.length>0?(0,t.jsx)(t.Fragment,{children:o}):null}}(e.children),o=e.title??n;return{...e,...o&&{title:o},children:r}}var s=r(4164),i=r(1312),c=r(7559);const l="admonition_xJq3",d="admonitionHeading_Gvgb",u="admonitionIcon_Rf37",h="admonitionContent_BuS1";function m({type:e,className:n,children:r}){return(0,t.jsx)("div",{className:(0,s.A)(c.G.common.admonition,c.G.common.admonitionType(e),l,n),children:r})}function g({icon:e,title:n}){return(0,t.jsxs)("div",{className:d,children:[(0,t.jsx)("span",{className:u,children:e}),n]})}function p({children:e}){return e?(0,t.jsx)("div",{className:h,children:e}):null}function f(e){const{type:n,icon:r,title:a,children:o,className:s}=e;return(0,t.jsxs)(m,{type:n,className:s,children:[a||r?(0,t.jsx)(g,{title:a,icon:r}):null,(0,t.jsx)(p,{children:o})]})}function x(e){return(0,t.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})})}const v={icon:(0,t.jsx)(x,{}),title:(0,t.jsx)(i.A,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)",children:"note"})};function j(e){return(0,t.jsx)(f,{...v,...e,className:(0,s.A)("alert alert--secondary",e.className),children:e.children})}function w(e){return(0,t.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})})}const S={icon:(0,t.jsx)(w,{}),title:(0,t.jsx)(i.A,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)",children:"tip"})};function y(e){return(0,t.jsx)(f,{...S,...e,className:(0,s.A)("alert alert--success",e.className),children:e.children})}function D(e){return(0,t.jsx)("svg",{viewBox:"0 0 14 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})})}const M={icon:(0,t.jsx)(D,{}),title:(0,t.jsx)(i.A,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)",children:"info"})};function k(e){return(0,t.jsx)(f,{...M,...e,className:(0,s.A)("alert alert--info",e.className),children:e.children})}function b(e){return(0,t.jsx)("svg",{viewBox:"0 0 16 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})})}const C={icon:(0,t.jsx)(b,{}),title:(0,t.jsx)(i.A,{id:"theme.admonition.warning",description:"The default label used for the Warning admonition (:::warning)",children:"warning"})};function T(e){return(0,t.jsx)("svg",{viewBox:"0 0 12 16",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})})}const A={icon:(0,t.jsx)(T,{}),title:(0,t.jsx)(i.A,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)",children:"danger"})};const N={icon:(0,t.jsx)(b,{}),title:(0,t.jsx)(i.A,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)",children:"caution"})};const L={...{note:j,tip:y,info:k,warning:function(e){return(0,t.jsx)(f,{...C,...e,className:(0,s.A)("alert alert--warning",e.className),children:e.children})},danger:function(e){return(0,t.jsx)(f,{...A,...e,className:(0,s.A)("alert alert--danger",e.className),children:e.children})}},...{secondary:e=>(0,t.jsx)(j,{title:"secondary",...e}),important:e=>(0,t.jsx)(k,{title:"important",...e}),success:e=>(0,t.jsx)(y,{title:"success",...e}),caution:function(e){return(0,t.jsx)(f,{...N,...e,className:(0,s.A)("alert alert--warning",e.className),children:e.children})}}};function P(e){const n=o(e),r=(a=n.type,L[a]||(console.warn(`No admonition component found for admonition type "${a}". Using Info as fallback.`),L.info));var a;return(0,t.jsx)(r,{...n})}},1367:(e,n,r)=>{r.d(n,{A:()=>o});r(6540);var a=r(7293),t=r(4848);function o(){return(0,t.jsx)(a.A,{type:"warning",title:"\ud83d\udea7 Work in Progress",icon:"\u26a0\ufe0f",children:"This document is a work in progress. Content may change, and some sections may be incomplete."})}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var a=r(6540);const t={},o=a.createContext(t);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);